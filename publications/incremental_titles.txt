Self-Adjusting Trust And Selection For Web Services.
Using Partial Evaluation To Enable Verification Of Concurrent Software.
Self-Adjusting Top Trees.
Self-Adjusting Heaps.
Imperative Self-Adjusting Computation.
Posse: A Framework For Optimizing Incremental View Maintenance At Data Warehouse.
Ps: Polygon Streams - A Distributed Architecture For Incremental Computation Applied To Graphics.
Incremental Computation Via Function Caching.
A Self-Adjusting Algorithm For Byzantine Agreement.
Interacting Real-Time Simulation Models And Reactive Computational-Physical Systems.
Dbtoaster: A Sql Compiler For High-Performance Delta Processing In Main-Memory Databases.
The Mre Wrapper Approach: Enabling Incremental View Maintenance Of Data Warehouses Defined On Multi-Relation Information Sources.
Analyzing Self-Adjusting Linear List Algorithms With Deletions And Unsuccessful Searches.
Utilizing Ids To Accelerate Incremental View Maintenance.
Tern: A Self-Adjusting Thermal Model For Dynamic Resource Provisioning In Data Centers.
Self-Adjusting Binary Trees.
Results And Problems On Self-Adjusting Search Trees And Related Data Structures.
How To Roll A Join: Asynchronous Incremental View Maintenance.
Slicing And Partial Evaluation Of Corba Component Model Designs For Avionics System.
Incremental Computation And Maintenance Of Temporal Aggregates.
Compiling Self-Adjusting Programs With Continuations.
Toward The Partial Evaluation Of Clp Languages.
An Implementation Of Parametrized Partial Evaluation.
Hybrid Partial Evaluation.
Automatic Type Inference Via Partial Evaluation.
Complexity Models For Incremental Computation.
Incremental Computation Of Pseudo-Inverse Of Laplacian.
An Introduction To Online And Offline Partial Evaluation Using A Simple Flowchart Language.
Self-Adjusting Models For Semi-Supervised Learning In Partially Observed Settings.
Tutorial On Online Partial Evaluation.
Pipe: Personalizing Recommendations Via Partial Evaluation.
A Categorized Bibliography On Incremental Computation.
The Pairing Heap: A New Form Of Self-Adjusting Heap.
Discovering Auxiliary Information For Incremental Computation.
Deriving Production Rules For Incremental View Maintenance.
Partial Evaluation Of Views.
Self-Adjusting Of Ternary Search Tries Using Conditional Rotations And Randomized Heuristics.
Automated Design Of Self-Adjusting Pipelines.
Unsuccessful Search In Self-Adjusting Data Structures.
Dbtoaster: Higher-Order Delta Processing For Dynamic, Frequently Fresh Views.
Sacta: A Self-Adjusting Clock Tree Architecture For Adapting To Thermal-Induced Delay Variation.
New Visualization And Debugging Technology For One-Way Dataflow Constraints.
Foundations For Partial Evaluation Of Functional Programs With Computational Effects.
Miniadapton: A Minimal Implementation Of Incremental Computation In Scheme.
Dbtoaster: Agile Views For A Dynamic Data Management System.
Pipe: Web Personalization By Partial Evaluation.
The Partial Evaluation Approach To Information Personalization.
Incremental Computation Of Pseudo-Inverse Of Laplacian: Theory And Applications.
A Strategy For Partial Evaluation Of Views.
A Self-Adjusting Clock Tree Architecture To Cope With Temperature Variations.
A Self-Adjusting Dynamic Logic Module.
On The Importance Of Tuning In Incremental View Maintenance: An Experience Case Study.
Self-Adjusting Multi-Way Search Trees.
Incremental Computation With Names.
Partial Evaluation Of A Clp Language.
Self-Adjusting Real-Time Search: A Summary Of Results.
A Complexity Theoretic Approach To Incremental Computation.
Self-Adjusting Binary Search Trees.
Randomized Competitive Algorithms For Successful And Unsuccessful Search On Self-Adjusting Linear Lists.
Partial Evaluation Of High-Level Imperative Programming Languages, With Applications In Hard Real-Time Systems.
A Computational Formalization For Partial Evaluation.
A Cost Semantics For Self-Adjusting Computation.
Adapton: Composable, Demand-Driven Incremental Computation.
On The Complexity Of Incremental Computation.
Asymmetric Batch Incremental View Maintenance.
Partial Evaluation Of Machine Code.
Static Caching For Incremental Computation.
A Self-Adjusting Code Cache Manager To Balance Start-Up Time And Memory Usage.
Analysing Deletions In Competitive Self-Adjusting Linear List.
Cbtree: A Practical Concurrent Self-Adjusting Search Tree.
The Cb Tree: A Practical Concurrent Self-Adjusting Search Tree.
